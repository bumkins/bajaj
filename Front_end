import React, { useState } from "react";

function App() {
  const [jsonData, setJsonData] = useState("");
  const [fileData, setFileData] = useState(null);
  const [response, setResponse] = useState(null);
  const [error, setError] = useState(null);

  const handleFileChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onloadend = () => {
        const base64data = reader.result.split(',')[1]; // Get Base64 string
        setFileData(base64data);
      };
      reader.readAsDataURL(file);
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const parsedData = JSON.parse(jsonData);
      const res = await fetch("http://localhost:5000/bfhl", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ data: parsedData, file_b64: fileData }),
      });

      const result = await res.json();
      setResponse(result);
    } catch (err) {
      setError("Invalid JSON format or error processing request.");
      setResponse(null);
    }
  };

  return (
    <div className="App">
      <h1>BFHL Dev Challenge</h1>
      <form onSubmit={handleSubmit}>
        <textarea
          value={jsonData}
          onChange={(e) => setJsonData(e.target.value)}
          placeholder='Enter valid JSON (e.g., {"data": ["A", "1", "b"]})'
          rows="6"
          cols="50"
        />
        <br />
        <input type="file" onChange={handleFileChange} />
        <br />
        <button type="submit">Submit</button>
      </form>

      {error && <p style={{ color: "red" }}>{error}</p>}

      {response && (
        <div>
          <h2>Response:</h2>
          <pre>{JSON.stringify(response, null, 2)}</pre>
        </div>
      )}
    </div>
  );
}

export default App;
